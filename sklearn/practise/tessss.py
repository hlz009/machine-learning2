import pandas as pd
import time

lstr = [
    {
        "男1,狮子": ["有气度有担当实力配得起野心", "天生的领袖气场", "确认过眼神是能赚大钱的人", "举手投足都是大将风范"],
        "男1,哈士奇": ["对朋友掏心掏肺超级讲义气", "专一属性100分付出爱就百分百", "天生热忱乐观好了伤疤忘了疼", "在外雄霸天下回家满地撒娇", "中二有才青年", "社交小能手走走走约约约",
                   "行走江湖一身技能"],
        "男1,狮子": ["皮到深处自然萌", "佛系的外表下是狂野的灵魂", ],
    },
    {
        "男2,狮子": ["确认过眼神是能赚大钱的人", "想七分说三分然后默默做足十分", "举手投足都是大将风范", "骨子里的霸气心头上的温柔", "不玩套路难得糊涂"],
        "男2,狼": ["生死看淡不服就干", "在外秒杀灭地战狼王回家撒娇卖傻哈士奇", "对他人严格对自己更狠", "在变强的道路上从不停歇", "搞不定的我carry", "吃醋狂魔占有欲强"],
        "男2,猫": ["不急不缓不骄不躁有自己的步调", "偶尔也是精致的居居男孩"],
    },
    {
        "男3,萨摩耶": ["眼里长着太阳笑里全是坦荡", "外表温和孩子气内心狂野不羁搞事情", "温柔不失坚韧善良而有锋芒", "适合当蓝颜更适合当男朋友", "自愈力满分"],
        "男3,狼": ["硬核人生说干就干", "在外秒天灭地战狼王回家撒娇卖傻哈士奇", "团队中的靠谱担当实力配得上野心", "不会说甜言蜜语只会用行动证明", "风越大我越浪"],
        "男3,鹿": ["生活中的细节控工作上的全能王", "看似优雅脱俗实则深陷红尘的宠妻狂魔", "非常理性偶尔任性"],
    },
    {
        "男4,企鹅": ["不争不抢有自己的一方天地", "双商在线内外兼修", "生活中的细节控工作上的全能王", "上一秒还在抽风下一秒就正经", "看破不说破看对不放过", "非常理性偶尔任性", "", "", "",
                  "", ""],
        "男4,尼克狐": ["长得很多情内心很专一", "生活不易多才多艺行走江湖一身本领", "逗比届的小清新文艺界的段子手", "看似玩世不恭其实特别靠谱", "没有热不起来的场子"],
        "男4,功夫熊猫": ["强势护短对喜欢的人无限宠溺", "不喜欢的人面前游刃有余在喜欢的人面前一脸懵逼", "掌心温暖爱的抱抱很有力", "大智若愚大胖若瘦"],
    },
    {
        "男5,狮子": ["天生的领袖气场", "有气度有担当实力配得起野心", "确认过眼神是能赚大钱的人", "在外雄霸天下回家洗手做羹汤", "不喜欢的人面前游刃有余在喜欢的人面前一脸懵逼",
                  "喜欢一个人就能给你宠上天", ],
        "男5,狼": ["对自己足够很拼起来自己都害怕", "生死看淡不服就干", "神挡杀神佛挡杀佛", "轻易不出手出手就快准狠", "一张游戏人生的脸，一颗专注到底的心"],
        "男5,哈士奇": ["一张游戏人生的脸，一颗专注到底的心"],
    },
    {
        "女1,狮子": ["身高一米六气场两米八", "大事凸显只会小事暴露蠢萌", "确认过眼神是能赚大钱的人", "嘴硬和心软成反比", "上的了厅堂揍得了流氓"],
        "女1,猫": ["外冷内热口是心非", "生活不易多才多艺很会仗可爱欺人", "出门在外发型不乱的精致居居女孩", "走开，别烦着朕"],
        "女1,鹿": ["浑身冒嫌弃毫无烟火气", "生活中的细节控工作上的全能王", "外貌协会至尊VIP", "天生初恋脸隐藏老司机"],
        "女1,猪猪": ["向来不记仇", "天大地大吃饭最大"],
    },
    {
        "女2,猫": ["不熟时很认生熟了之后很粘人", "生活不易多才多艺很会仗可爱欺人", "表面高冷难接近内在逗比孩子气", "不急不缓不骄不躁有自己的步调", "人群之外喜欢一个人呆着"],
        "女2,鹿": ["静若仙鹿动弱疯马", "高标准高要求强迫症+完美主义", "颜即正义", "可甜可盐可攻可受"],
        "女2,仓鼠": ["弱小无助但能吃有趣的灵魂两百多斤", "总有刁民想害朕内心戏多还精分"],
        "女2,考拉": ["永远吃不饱，永远睡不醒"],
    },
    {
        "女3,小狐狸": ["颜值爆表智商碾压", "性感起来十分柔软", "既能高贵冷艳又能清新文艺", "淑女与汉字的非常结合体", "只有想撩和懒得撩"],
        "女3,仓鼠": ["梦想是光吃不胖", "渡劫飞升中有事请画符", "拥有一个大心脏习惯一个人承担"],
        "女3,海豚": ["不争不抢不急不躁", "知晓世事复杂仍保心底温柔"],
        "女3,狮子": ["天生C位carry全场", "分手绝不回头回头多半为了报仇", "人美路子野能动手就不BB"],
    },
    {
        "女4,绵羊": ["治愈系输出不分敌我", "只要不触碰底线一切都是过眼云烟", "对世界有一颗不设防的童心", "温柔不失坚韧善良而有锋芒"],
        "女4,鹿": ["浑身冒着仙气儿掉落凡尘的仙女", "不屑争抢更不屑套路有自己的一方天地", "万年颜控党外貌协会至尊VIP会员", "可甜可盐可萌可御"],
        "女4,狮子": ["不可侵犯的个人空间和习惯", "人美路子野强势护犊子", "要么宠你上天要么虐你下地狱"],
        "女4,金鱼": ["七秒钟记忆", "佛系主义自得其乐"],
    },
    {
        "女5,鹿": ["不屑争抢更不屑套路有自己的一方天地", "心有大天使也有小恶魔", "亲切又有距离感"],
        "女5,兔子": ["正能永动机元气小马达", "偶尔任性却不犀利偶尔敏感却不神经质", "外表乖巧内心狂野", "众生皆苦为你最甜", "100种场合100种人格", "污萌小天使"],
        "女5,土拨鼠": ["保持简单的快乐"],
        "女5,豹": ["人美路子野能动手就不BB", "泼出去的水连盆都不要", "霸气与性感结合优雅与俏皮艰巨"],
    },
    {
        "女6,狮子": ["人美路子野能动手就不BB", "想七分说三分然后默默做足十分", "走路带风霸气攻遇神杀神暴脾气", "上的了厅堂揍得了流氓"],
        "女6,企鹅": ["是非黑白对错分明没有灰色地带", "思路清晰遇事冷静拥有独立的大智慧", "人群之外喜欢高质量的独处", "做事为人干净利落"],
        "女6,浣熊": ["一边熬夜一边养生", "玩归玩闹归闹还是一个好宝宝", "平时懒得用智商遇事脑袋开过光", "选择性健忘持续性乐观", "双面人格精分患者", "不按常理出牌脑洞惊人奇女子", ],
    },
    {
        "女6,兔子": ["喜欢简单懒得套路", "偶尔任性却不犀利偶尔敏感却不神经质", "100种场合100种人格", "单纯无公害佛系缺心眼", "小小一只很好哄"],
        "女6,小狐狸": ["一张游戏人生的脸，一颗专注到底的心", "感情起来十分柔软理性起来万分冷静", "时而高贵冷艳时而蠢萌傻白甜", "软妹与硬汉的十分结合体"],
        "女6,狮子": ["要么宠你上天要么虐你下地狱", "泼出去的水连盆都不要", "人美路子野人狠话不多", "分手绝不回头回头多半为了报仇"],
    },

]


# "","","","",
# "","","","","",
# "","","","","","",

# 写入文案的内容列表


def count_words(words):
    count_array = {}
    for i in words:
        count_array[i] = words.count(i)
    return count_array


temp_contents = []
for content in lstr:
    for word_key in content:
        temp_contents.extend(content[word_key])
result_size = len(temp_contents)
result = count_words(temp_contents)

result = sorted(result.items(), key=lambda item: item[1], reverse=True)

count_key2s = {}

words_data_list = []
words_count_list = []
words_res_list = []

for key, key2 in result:
    count_key2s[key2] = count_key2s.get(key2, 0) + key2
    keylabel = ''
    for content in lstr:
        for word_key in content:
            if key in content[word_key]:
                keylabel += "," + word_key
    print("%s 出现个数为：---》%d  出现在 %s，" % (key, key2, keylabel))
    words_data_list.append(key)
    words_count_list.append(key2)
    words_res_list.append(keylabel)

words_data_stat = {}
words_data_stat["文案"] = words_data_list
words_data_stat["出现条数"] = words_count_list
words_data_stat["情况分析"] = words_res_list

propation = 0
for key2 in count_key2s:
    propation += float(count_key2s[key2] / result_size)
    print("出现条数为%d 的占比为 %f" % (key2, float(count_key2s[key2] / result_size)))

print("总占比：%f" % propation)

data = pd.DataFrame(words_data_stat)
data.to_excel(str(time.time()) + ".xls")
